//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Input Asset/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""2ba5cf0e-4f8a-469d-9ad0-a72be59f0edb"",
            ""actions"": [
                {
                    ""name"": ""JumpKey"",
                    ""type"": ""Button"",
                    ""id"": ""b2714ac9-c088-47c1-bb8c-76c7bac5b530"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InteractionKey"",
                    ""type"": ""Button"",
                    ""id"": ""44e6ea34-6ec9-4497-89eb-11a0370895f4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InventoryKey"",
                    ""type"": ""Button"",
                    ""id"": ""ca9c6a34-ac37-49b7-9c41-35163ace8c72"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FlashLightKey"",
                    ""type"": ""Button"",
                    ""id"": ""8af47573-a20e-43d7-8a53-7a8d60e8bfe3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ReloadKey"",
                    ""type"": ""Button"",
                    ""id"": ""8e1e88af-c774-4490-bfc8-3fd97eed3a5b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""489cf2dc-b892-4bc4-9bc5-99a7cc600b1f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ZoomKeysKeyBoard"",
                    ""type"": ""Value"",
                    ""id"": ""b812ff74-c841-43ec-8442-e41729e98986"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ZoomKeysMouse"",
                    ""type"": ""Value"",
                    ""id"": ""2ab538db-4fce-4268-806d-bfbaef2d07b2"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""aad9f175-ab28-454e-a1d5-42d0cf0f7f34"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseInputDelta"",
                    ""type"": ""Value"",
                    ""id"": ""b496d9a2-3b0a-4978-97ae-50e110449f8d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PointZoomKey"",
                    ""type"": ""Button"",
                    ""id"": ""8e2e61c2-3c80-415e-b550-8541dc28672b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CrouchKey"",
                    ""type"": ""Button"",
                    ""id"": ""592dbb33-86c2-4d75-bdef-3023c20143db"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseLeftClick"",
                    ""type"": ""Button"",
                    ""id"": ""200ed71a-5afd-4f23-bbbc-718e13d4989a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseInputPosition"",
                    ""type"": ""Value"",
                    ""id"": ""42b49f54-48f5-41a4-9b0f-9bece7216866"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""1059566f-7279-486c-a544-6ca390ed245e"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JumpKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d1e9acba-d04b-4ab1-a7b4-4df142c085b1"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InteractionKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3fdaf136-543a-4b43-b17b-50cf4d9723ce"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InventoryKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7974a01c-07b5-4986-a91b-b310ffde6e15"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FlashLightKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a102d9af-9497-46d1-a368-4b01632762c1"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ReloadKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector Wasd"",
                    ""id"": ""18338642-0975-4a34-8ed7-9491baad72ef"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""5b1c8c10-14bc-4bd9-acf1-e71b64bbb105"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""166f1230-2b77-4b65-a972-5dfe3ffa52f1"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a3e0c36c-815c-4fc5-96d7-5b0bd65a0615"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""dcade412-ae73-42cc-b159-9d5000984cbb"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector Arrows"",
                    ""id"": ""1eb9ed37-c65b-4b5d-af15-55a7982af76e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d9d5e156-d60d-44d0-92b6-709e564f27e6"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""90a610eb-077c-4d54-ae0c-20e4281b2fcc"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""56990b87-6fbd-4483-a5d9-994d57920e8b"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ea011484-35bd-4272-bb6c-4f2377d35b8d"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis Key Pad"",
                    ""id"": ""c08b92c2-a675-4cb4-acfd-49cc83b9aa9e"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZoomKeysKeyBoard"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""2718ac3c-663a-4d92-868b-a30b5f94fbd8"",
                    ""path"": ""<Keyboard>/minus"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZoomKeysKeyBoard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""ca60bc58-124b-4d7b-980a-954b48e4c91b"",
                    ""path"": ""<Keyboard>/equals"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZoomKeysKeyBoard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis Num Pad"",
                    ""id"": ""3d0be2b9-bf61-44b0-affb-f65a9dd447fe"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZoomKeysKeyBoard"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""1bfb22b5-461e-4414-b7de-8ada00f1f403"",
                    ""path"": ""<Keyboard>/numpadMinus"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZoomKeysKeyBoard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""12abec4c-d675-47e4-9ac6-b9e1b3df2063"",
                    ""path"": ""<Keyboard>/numpadPlus"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZoomKeysKeyBoard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""c3febcd6-bdae-4634-b4e1-550ba4d0a3d2"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZoomKeysMouse"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""1655a2cf-b41f-4a01-ae59-f6f4b99cf04e"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZoomKeysMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""9d60f997-0d9a-451e-a50c-ca567c564842"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZoomKeysMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""872e71f8-58d0-4a60-9a2d-1917841aed32"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dd18b1b6-276e-40cc-934c-d8f6f295688b"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseInputDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""75da8b60-954b-4dc9-8703-59a75d88c645"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PointZoomKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""58106836-e54f-48d6-a903-0b8cfe728009"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CrouchKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""75420100-1fdc-40d5-ae90-032488e8a330"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseLeftClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b8c55db3-e050-43ca-9818-e0d739033cc4"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseInputPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_JumpKey = m_Player.FindAction("JumpKey", throwIfNotFound: true);
        m_Player_InteractionKey = m_Player.FindAction("InteractionKey", throwIfNotFound: true);
        m_Player_InventoryKey = m_Player.FindAction("InventoryKey", throwIfNotFound: true);
        m_Player_FlashLightKey = m_Player.FindAction("FlashLightKey", throwIfNotFound: true);
        m_Player_ReloadKey = m_Player.FindAction("ReloadKey", throwIfNotFound: true);
        m_Player_Movement = m_Player.FindAction("Movement", throwIfNotFound: true);
        m_Player_ZoomKeysKeyBoard = m_Player.FindAction("ZoomKeysKeyBoard", throwIfNotFound: true);
        m_Player_ZoomKeysMouse = m_Player.FindAction("ZoomKeysMouse", throwIfNotFound: true);
        m_Player_Sprint = m_Player.FindAction("Sprint", throwIfNotFound: true);
        m_Player_MouseInputDelta = m_Player.FindAction("MouseInputDelta", throwIfNotFound: true);
        m_Player_PointZoomKey = m_Player.FindAction("PointZoomKey", throwIfNotFound: true);
        m_Player_CrouchKey = m_Player.FindAction("CrouchKey", throwIfNotFound: true);
        m_Player_MouseLeftClick = m_Player.FindAction("MouseLeftClick", throwIfNotFound: true);
        m_Player_MouseInputPosition = m_Player.FindAction("MouseInputPosition", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_JumpKey;
    private readonly InputAction m_Player_InteractionKey;
    private readonly InputAction m_Player_InventoryKey;
    private readonly InputAction m_Player_FlashLightKey;
    private readonly InputAction m_Player_ReloadKey;
    private readonly InputAction m_Player_Movement;
    private readonly InputAction m_Player_ZoomKeysKeyBoard;
    private readonly InputAction m_Player_ZoomKeysMouse;
    private readonly InputAction m_Player_Sprint;
    private readonly InputAction m_Player_MouseInputDelta;
    private readonly InputAction m_Player_PointZoomKey;
    private readonly InputAction m_Player_CrouchKey;
    private readonly InputAction m_Player_MouseLeftClick;
    private readonly InputAction m_Player_MouseInputPosition;
    public struct PlayerActions
    {
        private @PlayerInputActions m_Wrapper;
        public PlayerActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @JumpKey => m_Wrapper.m_Player_JumpKey;
        public InputAction @InteractionKey => m_Wrapper.m_Player_InteractionKey;
        public InputAction @InventoryKey => m_Wrapper.m_Player_InventoryKey;
        public InputAction @FlashLightKey => m_Wrapper.m_Player_FlashLightKey;
        public InputAction @ReloadKey => m_Wrapper.m_Player_ReloadKey;
        public InputAction @Movement => m_Wrapper.m_Player_Movement;
        public InputAction @ZoomKeysKeyBoard => m_Wrapper.m_Player_ZoomKeysKeyBoard;
        public InputAction @ZoomKeysMouse => m_Wrapper.m_Player_ZoomKeysMouse;
        public InputAction @Sprint => m_Wrapper.m_Player_Sprint;
        public InputAction @MouseInputDelta => m_Wrapper.m_Player_MouseInputDelta;
        public InputAction @PointZoomKey => m_Wrapper.m_Player_PointZoomKey;
        public InputAction @CrouchKey => m_Wrapper.m_Player_CrouchKey;
        public InputAction @MouseLeftClick => m_Wrapper.m_Player_MouseLeftClick;
        public InputAction @MouseInputPosition => m_Wrapper.m_Player_MouseInputPosition;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @JumpKey.started += instance.OnJumpKey;
            @JumpKey.performed += instance.OnJumpKey;
            @JumpKey.canceled += instance.OnJumpKey;
            @InteractionKey.started += instance.OnInteractionKey;
            @InteractionKey.performed += instance.OnInteractionKey;
            @InteractionKey.canceled += instance.OnInteractionKey;
            @InventoryKey.started += instance.OnInventoryKey;
            @InventoryKey.performed += instance.OnInventoryKey;
            @InventoryKey.canceled += instance.OnInventoryKey;
            @FlashLightKey.started += instance.OnFlashLightKey;
            @FlashLightKey.performed += instance.OnFlashLightKey;
            @FlashLightKey.canceled += instance.OnFlashLightKey;
            @ReloadKey.started += instance.OnReloadKey;
            @ReloadKey.performed += instance.OnReloadKey;
            @ReloadKey.canceled += instance.OnReloadKey;
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @ZoomKeysKeyBoard.started += instance.OnZoomKeysKeyBoard;
            @ZoomKeysKeyBoard.performed += instance.OnZoomKeysKeyBoard;
            @ZoomKeysKeyBoard.canceled += instance.OnZoomKeysKeyBoard;
            @ZoomKeysMouse.started += instance.OnZoomKeysMouse;
            @ZoomKeysMouse.performed += instance.OnZoomKeysMouse;
            @ZoomKeysMouse.canceled += instance.OnZoomKeysMouse;
            @Sprint.started += instance.OnSprint;
            @Sprint.performed += instance.OnSprint;
            @Sprint.canceled += instance.OnSprint;
            @MouseInputDelta.started += instance.OnMouseInputDelta;
            @MouseInputDelta.performed += instance.OnMouseInputDelta;
            @MouseInputDelta.canceled += instance.OnMouseInputDelta;
            @PointZoomKey.started += instance.OnPointZoomKey;
            @PointZoomKey.performed += instance.OnPointZoomKey;
            @PointZoomKey.canceled += instance.OnPointZoomKey;
            @CrouchKey.started += instance.OnCrouchKey;
            @CrouchKey.performed += instance.OnCrouchKey;
            @CrouchKey.canceled += instance.OnCrouchKey;
            @MouseLeftClick.started += instance.OnMouseLeftClick;
            @MouseLeftClick.performed += instance.OnMouseLeftClick;
            @MouseLeftClick.canceled += instance.OnMouseLeftClick;
            @MouseInputPosition.started += instance.OnMouseInputPosition;
            @MouseInputPosition.performed += instance.OnMouseInputPosition;
            @MouseInputPosition.canceled += instance.OnMouseInputPosition;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @JumpKey.started -= instance.OnJumpKey;
            @JumpKey.performed -= instance.OnJumpKey;
            @JumpKey.canceled -= instance.OnJumpKey;
            @InteractionKey.started -= instance.OnInteractionKey;
            @InteractionKey.performed -= instance.OnInteractionKey;
            @InteractionKey.canceled -= instance.OnInteractionKey;
            @InventoryKey.started -= instance.OnInventoryKey;
            @InventoryKey.performed -= instance.OnInventoryKey;
            @InventoryKey.canceled -= instance.OnInventoryKey;
            @FlashLightKey.started -= instance.OnFlashLightKey;
            @FlashLightKey.performed -= instance.OnFlashLightKey;
            @FlashLightKey.canceled -= instance.OnFlashLightKey;
            @ReloadKey.started -= instance.OnReloadKey;
            @ReloadKey.performed -= instance.OnReloadKey;
            @ReloadKey.canceled -= instance.OnReloadKey;
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @ZoomKeysKeyBoard.started -= instance.OnZoomKeysKeyBoard;
            @ZoomKeysKeyBoard.performed -= instance.OnZoomKeysKeyBoard;
            @ZoomKeysKeyBoard.canceled -= instance.OnZoomKeysKeyBoard;
            @ZoomKeysMouse.started -= instance.OnZoomKeysMouse;
            @ZoomKeysMouse.performed -= instance.OnZoomKeysMouse;
            @ZoomKeysMouse.canceled -= instance.OnZoomKeysMouse;
            @Sprint.started -= instance.OnSprint;
            @Sprint.performed -= instance.OnSprint;
            @Sprint.canceled -= instance.OnSprint;
            @MouseInputDelta.started -= instance.OnMouseInputDelta;
            @MouseInputDelta.performed -= instance.OnMouseInputDelta;
            @MouseInputDelta.canceled -= instance.OnMouseInputDelta;
            @PointZoomKey.started -= instance.OnPointZoomKey;
            @PointZoomKey.performed -= instance.OnPointZoomKey;
            @PointZoomKey.canceled -= instance.OnPointZoomKey;
            @CrouchKey.started -= instance.OnCrouchKey;
            @CrouchKey.performed -= instance.OnCrouchKey;
            @CrouchKey.canceled -= instance.OnCrouchKey;
            @MouseLeftClick.started -= instance.OnMouseLeftClick;
            @MouseLeftClick.performed -= instance.OnMouseLeftClick;
            @MouseLeftClick.canceled -= instance.OnMouseLeftClick;
            @MouseInputPosition.started -= instance.OnMouseInputPosition;
            @MouseInputPosition.performed -= instance.OnMouseInputPosition;
            @MouseInputPosition.canceled -= instance.OnMouseInputPosition;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnJumpKey(InputAction.CallbackContext context);
        void OnInteractionKey(InputAction.CallbackContext context);
        void OnInventoryKey(InputAction.CallbackContext context);
        void OnFlashLightKey(InputAction.CallbackContext context);
        void OnReloadKey(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
        void OnZoomKeysKeyBoard(InputAction.CallbackContext context);
        void OnZoomKeysMouse(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnMouseInputDelta(InputAction.CallbackContext context);
        void OnPointZoomKey(InputAction.CallbackContext context);
        void OnCrouchKey(InputAction.CallbackContext context);
        void OnMouseLeftClick(InputAction.CallbackContext context);
        void OnMouseInputPosition(InputAction.CallbackContext context);
    }
}
